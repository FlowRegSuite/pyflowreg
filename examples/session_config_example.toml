# PyFlowReg Session Configuration Example (TOML format)
#
# This file configures multi-recording session processing, mirroring the
# MATLAB align_full_v3_checkpoint.m workflow.
#
# Usage:
#   pyflowreg-session run --config session_config.toml

# Root directory containing input recordings
root = "/path/to/data/session_01"

# Glob pattern for discovering input files
pattern = "*.tif"

# Optional: specify center reference file (relative to root)
# If not specified, uses lexicographic middle file
# center = "stack_005.tif"

# Output directories (relative to root if not absolute)
output_root = "compensated_outputs"
final_results = "final_results"

# Resume: skip stages that have already completed
resume = true

# Scheduler: "local" | "array" | "dask"
# - "local": Run sequentially or in parallel on single machine
# - "array": Use HPC job array (SLURM/SGE/PBS) - task ID auto-detected
# - "dask": Use Dask distributed scheduler
scheduler = "local"

# Optical flow backend
flow_backend = "flowreg"  # or "torch" / "cupy" when available
backend_params = {}  # Additional backend parameters

# Stage 2 parameters (inter-sequence alignment)
cc_upsample = 4  # Cross-correlation upsampling factor
sigma_smooth = 6.0  # Gaussian smoothing sigma
alpha_between = 25.0  # Regularization for inter-sequence OF
iterations_between = 100  # Iterations for inter-sequence OF
